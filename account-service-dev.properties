
spring.docker.compose.lifecycle-management=start_only
# DataBase Config
spring.datasource.url=jdbc:postgresql://localhost:5432/account-service
# RabbitMQ configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
rabbitmq.queue.email.name=email_queue
rabbitmq.exchange.email.name=email_exchange
rabbitmq.binding.email.name=email_routing_key

rabbitmq.queue.payment.name=payment_queue
rabbitmq.exchange.payment.name=payment_exchange
rabbitmq.binding.payment.name=payment_routing_key

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.customerService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.customerService.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.customerService.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.customerService.slidingWindowSize=5
resilience4j.circuitbreaker.instances.customerService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.customerService.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.customerService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.customerService.automaticTransitionFromOpenToHalfOpenEnabled=true
#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.retryCustomerService.timeout-duration=3s
resilience4j.retry.instances.retryCustomerService.max-attempts=3
resilience4j.retry.instances.retryCustomerService.wait-duration=5s

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_ADDRESS}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true